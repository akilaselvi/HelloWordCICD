# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  lint:
    if : false
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Run Lint
        run: ./gradlew lintDebug

      - name: Upload html test report
        uses: actions/upload-artifact@v4
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html
          if-no-files-found: warn
  unit-test:
    if : false
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Run Unit Test
        run: ./gradlew test
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/
          if-no-files-found: warn
  instrumentation-test:
#    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
            java-version: 17
            distribution: temurin

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
      - name: Install system image
        run: |
          sdkmanager --install "system-images;android-35;google_apis;x86_64"

      - name: Create and start emulator
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-35;google_apis;x86_64" --device "pixel_8"
          emulator -avd test -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim &
          adb wait-for-device shell getprop sys.boot_completed

      - name: Run espresso Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          target: google_apis_playstore
          arch: x86_64
          profile: pixel_8
          disable-animations: true
          script: ./gradlew connectedDebugAndroidTest
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/
          if-no-files-found: warn

#      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!
#
#      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.
